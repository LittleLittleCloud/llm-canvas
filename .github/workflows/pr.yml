name: Pull Request Validation

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run ruff check
        run: uv run ruff check .

      - name: Run ruff format check
        run: uv run ruff format --check .

      - name: Run mypy
        run: uv run mypy llm_canvas/

      - name: Setup Node.js for frontend linting
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web_ui/package-lock.json

      - name: Install frontend dependencies
        working-directory: web_ui
        run: npm ci

      - name: Check TypeScript types
        working-directory: web_ui
        run: npm run type-check

      - name: Check Prettier formatting
        working-directory: web_ui
        run: npm run format:check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run tests
        run: uv run pytest

  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Start canvas server in background
        run: |
          uv run llm-canvas server &
          # Wait for server to start
          sleep 5
          # Test server health
          curl -f http://localhost:8000/health || (echo "Server failed to start" && exit 1)

      - name: Run examples
        run: |
          # Run individual examples with timeout to prevent hanging
          timeout 30 uv run python -m examples.hello_example || echo "Hello example completed"
          timeout 30 uv run python -m examples.weather_tool_example || echo "Weather example completed" 
          timeout 30 uv run python -m examples.vacation_planning_example || echo "Vacation example completed"
          timeout 30 uv run python -m examples.investment_decision_example || echo "Investment example completed"

      - name: Test examples runner
        run: |
          # Test the main examples runner (with timeout to prevent hanging)
          timeout 60 uv run python -m examples.run_examples || echo "Examples runner completed"

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web_ui/package-lock.json

      - name: Install frontend dependencies
        working-directory: web_ui
        run: npm ci

      - name: Build frontend
        working-directory: web_ui
        run: npm run build

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, examples, frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: web_ui/package-lock.json

      - name: Install frontend dependencies
        working-directory: web_ui
        run: npm ci

      - name: Build frontend
        working-directory: web_ui
        run: npm run build

      - name: Build package
        run: |
          uv run python build.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7
